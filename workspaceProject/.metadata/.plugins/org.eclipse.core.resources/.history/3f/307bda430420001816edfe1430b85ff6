import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

class feature_extraction{
	static int NUMBER_OF_TRIALS = 40;
	static int NUMBER_OF_RUNS = 9;
	static int[] startTimeTrain = new int[NUMBER_OF_TRIALS * NUMBER_OF_RUNS/2];
	static int[] startTimeTest = new int[NUMBER_OF_TRIALS * NUMBER_OF_RUNS/2];
	static int[] classLabel = new int[NUMBER_OF_TRIALS * NUMBER_OF_RUNS/2];
	static double[] filteredSignal = new double[986780];
	static double[][] signalData = new double[986780][60];
	//filters parameters
	static double[] b = new double[11];
	static double[] a = new double[6];
	public static void main (String args[]){
		
		Scanner read1, read2, read3;
		int no = NUMBER_OF_RUNS * NUMBER_OF_TRIALS, m=0, n=0, l=0;
		try {
				read1 = new Scanner (new File("src/k3b_HDR_TRIG.txt"));
				read2 = new Scanner (new File("src/k3b_HDR_Classlabel.txt"));
				
			
			for(int i=0; i<no; i++)
			{
			        if(read2.hasNextInt())
			        {
			            classLabel[n] = read2.nextInt();
			            n++;
			            read2.nextLine();
			            if(read1.hasNextInt())
				        {
				            startTimeTrain[m] = read1.nextInt();
				            m++;
				        }
			        }
			        else
			        {
			        	read2.nextLine();
			        	if(read1.hasNextInt())
				        {
				            startTimeTest[l] = read1.nextInt();
				            l++;
				        }
			        }
			}
			read1.close();
			read2.close();
			read3 = new Scanner (new File("src/k3b_s.txt"));
			for(int i=0; i<986780; i++)
			{
				for(int j=0; j<60; j++)
				{
					if(read3.hasNextDouble())
					{
						signalData[i][j] = read3.nextDouble();
					}
				}
			}
		} catch (FileNotFoundException e) {
			System.out.print("Error while reading inputs");
		}
		System.out.print(m +" "+ l);
		System.out.print(signalData[105750][3]);
	
		//for each channel
		for(int c=0; c<60; c++)
		{
			//Mu filter
			//filter parameters
			b = new double[] {1.2,0.0,3.2};
			a = new double[] {}; 
			int M=11, N=6;
			for(int j=0; j<5; j++)
			{
				for(int k=0; k<M; k++)
				{
					filteredSignal[j] += b[k]*signalData[j-k][c];
				}
				for(int k=0; k<N; k++)
				{
					filteredSignal[j] -= a[k]*filteredSignal[j-k];
				}
			}
			
			//Beta filter
			//filter parameters
			b = new double[] {1.2,0.0,3.2};
			a = new double[] {}; 
			
			for(int j=0; j<5; j++)
			{
				for(int k=0; k<M; k++)
				{
					filteredSignal[j] += b[k]*signalData[j-k][c];
				}
				for(int k=0; k<N; k++)
				{
					filteredSignal[j] -= a[k]*filteredSignal[j-k];
				}
			}
		}
	}
}